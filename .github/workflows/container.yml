name: Build Container

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string

jobs:
  container-build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache PX4
        if: inputs.image == 'fcm'
        uses: actions/cache@v3
        with:
          path: PX4/build
          key: px4-package-${{ hashFiles('PX4/patches/**') }}-${{ hashFiles('PX4/bell.xml') }}
          restore-keys: |
            px4-package-${{ hashFiles('PX4/patches/**') }}
            px4-firmware-${{ hashFiles('PX4/patches/**') }}

      - name: Build Custom Pymavlink Package
        if: inputs.image == 'fcm'
        run: python PX4/build.py --pymavlink

      - name: Github CR Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Date
        run: echo "DATE_TAG=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV

      - name: Build Container
        uses: docker/build-push-action@v3
        with:
          context: VMC/${{ inputs.image }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/bellflight/avr/2022/${{ inputs.image }}:latest
            ghcr.io/bellflight/avr/2022/${{ inputs.image }}:${{ env.DATE_TAG }}
          platforms: linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
