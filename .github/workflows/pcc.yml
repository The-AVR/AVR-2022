name: Build PCC Firmware

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - "PCC/**"
  push:
    branches:
      - main
    paths:
      - "PCC/**"

jobs:
  pcc-build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: pip
          cache-dependency-path: PCC

      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: PCC/.pio
          key: pio-${{ hashFiles('PCC/platformio.ini') }}-${{ hashFiles('PCC/requirements.txt') }}
          restore-keys: |
            pio-${{ hashFiles('PCC/platformio.ini') }}
            pio

      - name: Setup PlatformIO
        run: python setup.py
        working-directory: PCC

      - name: Run Checks
        run: pio check --skip-packages
        working-directory: PCC

      - name: Build Firmware
        run: python build.py
        working-directory: PCC

      - name: Upload Firmware to Pipeline
        if: github.event_name != 'push'
        uses: actions/upload-artifact@v3
        with:
          name: PCC Firmware
          path: PCC/.pio/build/adafruit_feather_m4/*.bin

      - name: Get Latest Release
        if: github.event_name != 'pull_request'
        id: latest_release
        uses: gregziegan/fetch-latest-release@v2.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Existing Firmware
        if: github.event_name != 'pull_request'
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ steps.latest_release.outputs.tag_name }}
          assets: '*.bin'

      - name: Upload Firmware to Release
        if: github.event_name != 'pull_request'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: PCC/.pio/build/adafruit_feather_m4/*.bin
          file_glob: true
          tag: ${{ steps.latest_release.outputs.tag_name }}
          overwrite: true
