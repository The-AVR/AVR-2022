name: Build GUIs

on:
  workflow_dispatch:
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - 'PCC/GUI/'
  #     - 'VMC/GUI/'
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'PCC/GUI/'
  #     - 'VMC/GUI/'

jobs:
  build:
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
      - name: Get Latest Release
        id: latest_release
        uses: gregziegan/fetch-latest-release@v2.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Copy Libraries
        run: python scripts/copy_libraries.py

      - name: Prepare Python
        run: |
          python -m pip install pip wheel --upgrade
          python -m pip install pyinstaller

      - name: Build PCC GUI
        run: |
          python -m pip install -r PCC/GUI/requirements.txt
          pyinstaller PCC/GUI/app.py --onefile --name VRCPCCTest --icon PCC/GUI/img/logo.ico --add-data "PCC/GUI/img;img" --noconfirm

      - name: Build VMC GUI
        run: |
          python -m pip install -r VMC/GUI/requirements.txt
          pyinstaller VMC/GUI/app.py --onefile --name VRCControlGUI --icon VMC/GUI/img/logo.ico --add-data "VMC/GUI/img;img" --noconfirm

      - name: Upload GUIs to Release
        if: github.event_name != 'pull_request'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*.exe
          file_glob: true
          tag: ${{ steps.latest_release.outputs.tag_name }}
          overwrite: true
